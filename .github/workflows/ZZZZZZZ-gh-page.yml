# 1 工作流名称
name: gh-page (项目页面发布)

# 2 工作流执行名称
run-name: ${{ github.actor }} is update repo, start building...

# 3 触发器
on:
  # push 推送
  push:
    branches: ["gh-page"]
  # PR 合并提交
  pull_request:
    branches: ["gh-page"]

  # 允许您从“操作”选项卡手动运行此工作流
  workflow_dispatch:

# 4 设置权限（文件是可以被读写修改的）
permissions:
  contents: read
  pages: write
  id-token: write

# 工作1
jobs:
  # 任务名称
  build:
    # 执行平台
    runs-on: ubuntu-latest

    # 任务步骤
    steps:
      # 1 将代码仓库的内容拉取（或称为检出）到工作目录中，以便在下面的工作流程中使用
      - name: Checkout code (检出代码)
        uses: actions/checkout@v4
      # 2 安装 node 环境，并设置版本为 20
      - name: Setup Node.js (设置 node 版本)
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      # 3 安装 pnpm
      - name: Install pnpm (安装 pnpm)
        uses: pnpm/action-setup@v3
        with:
          version: "9"
      # 4 安装依赖
      - name: Install dependencies (安装依赖)
        run: pnpm install

      # 5 代码检查，无该命令所以不执行
      # - name: lint (代码检查)
      #   run: pnpm run lint

      # 6 跑测试，无该命令所以不执行
      # - name: Test (测试)
      #   run: pnpm run test

      # 7 构建项目
      - name: Build (构建)
        run: pnpm run build
      # 8 上传构建产物（actions/upload-artifact@v3 会上传工作流程中的文件，允许您在作业之间共享数据并在工作流程完成后存储数据）
      - name:  Upload build artifacts (上传构建产物)
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./dist"



  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
